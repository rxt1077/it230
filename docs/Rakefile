require 'asciidoctor'
require 'asciidoctor-epub3'
require 'asciidoctor-pdf'
require 'asciidoctor-diagram'
require 'webrick'

output = 'output'

desc 'Builds output directories'
task :dirs do
  mkdir_p "#{output}/images"
end

desc 'Copies over the images for HTML5 output'
task :images => [:dirs] do
  cp Dir.glob('images/*'), "#{output}/images"
end

desc 'Builds the HTML5 version of the book'
task :html5 => [:images] do
  Asciidoctor.convert_file(
    'index.adoc',
    to_dir: output,
    safe: :unsafe
  )
end

desc 'Builds the epub3 version of the book'
task :epub3 => [:dirs] do
  Asciidoctor.convert_file(
    'index.adoc',
    safe: :unsafe,
    backend: 'epub3',
    to_file: "#{output}/security.epub"
  )
end

desc 'Builds the PDF version of the book'
task :pdf => [:dirs] do
  Asciidoctor.convert_file(
    'index.adoc',
    safe: :unsafe,
    backend: 'pdf',
    to_file: "#{output}/security.pdf",
  )
end

desc 'Builds a zip file of the contents of the output directory'
task :zip do
  sh "cd #{output}; zip -r security.zip *"
end

desc "Runs an HTTP server to serve the /docs/#{output} directory"
task :server do
  server = WEBrick::HTTPServer.new :Port => 8080, :DocumentRoot => "/docs/#{output}"
  trap 'INT' do server.shutdown end
  server.start
end

desc 'Deploys the output directory to https://web.njit.edu/~rxt1077/security'
task :deploy do
  sh "rsync --delete -av #{output}/ rxt1077@afs22.njit.edu:public_html/security/"
end

task :default => [:html5, :epub3, :pdf, :zip]
